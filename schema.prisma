generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum ProviderType {
  LOCAL
  GOOGLE_DRIVE
  AMAZON_S3
  DROPBOX
  ONEDRIVE
  TELEGRAM
}

enum AuthType {
  NONE
  OAUTH2
  API_KEY
  BASIC
}

model User {
  id         String      @id @default(uuid())
  name       String
  email      String      @unique
  password   String
  role       Role        @default(USER)
  workspaces Workspace[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Workspace {
  id        String     @id @default(uuid())
  name      String
  ownerId   String
  owner     User       @relation(fields: [ownerId], references: [id])
  providers Provider[]
  files     File[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Provider {
  id          String       @id @default(uuid())
  name        String // Display name of the provider
  type        ProviderType
  authType    AuthType // Type of authentication used
  credentials Json // Authentication credentials
  metadata    Json? // Additional metadata (user info, folder IDs, etc.)
  isActive    Boolean      @default(true)
  workspaceId String
  workspace   Workspace    @relation(fields: [workspaceId], references: [id])
  files       File[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([workspaceId])
  @@index([type])
}

model File {
  id          String     @id @default(uuid())
  name        String
  isFolder    Boolean    @default(false)
  parentPath  String
  path        String
  mimeType    String?
  size        Float?
  isStarred   Boolean    @default(false)
  referenceId String? // ID on the provider's system
  workspaceId String?
  workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  providerId  String?
  provider    Provider?  @relation(fields: [providerId], references: [id])
  parentId    String? // For hierarchical structure
  parent      File?      @relation("FileHierarchy", fields: [parentId], references: [id])
  children    File[]     @relation("FileHierarchy")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([workspaceId, path])
  @@index([providerId, referenceId])
  @@index([parentId])
}
