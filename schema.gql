# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Provider {
  id: String!
  name: String!
  type: ProviderType!
  authType: AuthType!
  credentials: String!
  metadata: String
  isActive: Boolean!
  workspaceId: String!
  workspace: Workspace!
  files: [File!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ProviderType {
  LOCAL
  GOOGLE_DRIVE
  AMAZON_S3
  DROPBOX
  ONEDRIVE
  TELEGRAM
}

enum AuthType {
  NONE
  OAUTH2
  API_KEY
  BASIC
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type File {
  id: String!
  name: String!
  isFolder: Boolean!
  parentPath: String!
  path: String!
  mimeType: String
  size: Float
  isStarred: Boolean!
  referenceId: String
  workspaceId: String
  workspace: Workspace
  providerId: String
  provider: Provider
  parentId: String
  parent: File
  children: [File!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Workspace {
  id: String!
  name: String!
  ownerId: String!
  owner: User!
  providers: [Provider!]!
  files: [File!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: String!
  name: String!
  email: String!
  password: String!
  role: String!
  workspaces: [Workspace!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type LoginResponse {
  accessToken: String!
}

type RegisterResponse {
  ok: Boolean!
}

type ForgotPasswordResponse {
  ok: Boolean!
}

type VerifyCodeResponse {
  ok: Boolean!
}

type WorkspaceResponse {
  ok: Boolean!
}

type WorkspaceStat {
  title: String!
  count: Float!
  size: Float!
}

type Query {
  me: User!
  user(id: String!): User!
  workspaces: [Workspace!]!
  workspace(id: String!): Workspace
  workspaceWithProviders(id: String!): Workspace
  workspaceStats(id: String!): [WorkspaceStat!]!
}

type Mutation {
  login(input: LoginInput!): LoginResponse!
  register(input: RegisterInput!): RegisterResponse!
  forgotPasswordSendCode(input: ForgotPasswordSendCodeInput!): ForgotPasswordResponse!
  forgotPasswordVerifyCode(input: ForgotPasswordVerifyCodeInput!): VerifyCodeResponse!
  forgotPasswordReset(input: ForgotPasswordResetInput!): ForgotPasswordResponse!
  createWorkspace(input: CreateWorkspaceInput!): Workspace!
  updateWorkspace(input: UpdateWorkspaceInput!): WorkspaceResponse!
  deleteWorkspace(id: String!): WorkspaceResponse!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  name: String!
  email: String!
  password: String!
}

input ForgotPasswordSendCodeInput {
  email: String!
}

input ForgotPasswordVerifyCodeInput {
  email: String!
  code: Float!
}

input ForgotPasswordResetInput {
  email: String!
  code: Float!
  password: String!
}

input CreateWorkspaceInput {
  name: String!
}

input UpdateWorkspaceInput {
  id: String!
  name: String
}