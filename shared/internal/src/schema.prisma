generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum ProviderType {
  LOCAL
  GOOGLE_DRIVE
  AMAZON_S3
  DROPBOX
  ONEDRIVE
  TELEGRAM
}

model User {
  id         String      @id @default(uuid())
  name       String
  email      String      @unique
  password   String
  role       Role        @default(USER)
  workspaces Workspace[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Workspace {
  id        String    @id @default(uuid())
  name      String
  keys      Key[]
  ownerId   String
  owner     User      @relation(fields: [ownerId], references: [id])
  accounts  Account[]
  files     File[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Account {
  id          String       @id @default(uuid())
  alias       String?
  type        ProviderType
  credentials Json?
  workspaceId String
  workspace   Workspace    @relation(fields: [workspaceId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Key {
  id          String       @id @default(uuid())
  type        ProviderType
  keys        Json?
  workspaceId String
  workspace   Workspace    @relation(fields: [workspaceId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model File {
  id          String    @id @default(uuid())
  name        String
  isFolder    Boolean   @default(false)
  parentPath  String
  path        String
  totalItems  Int?      @default(0)
  size        Int?
  mimeType    String?
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
