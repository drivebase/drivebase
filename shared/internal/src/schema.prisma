generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum ProviderType {
  LOCAL
  GOOGLE_DRIVE
  AMAZON_S3
  DROPBOX
  ONEDRIVE
  TELEGRAM
}

model User {
  id         String      @id @default(uuid())
  name       String
  email      String      @unique
  password   String
  role       Role        @default(USER)
  workspaces Workspace[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Workspace {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  providers Provider[]
}

model Provider {
  id          String               @id @default(uuid())
  alias       String
  type        ProviderType
  keys        Json?
  isEnabled   Boolean              @default(true)
  workspaceId String
  workspace   Workspace            @relation(fields: [workspaceId], references: [id])
  connections ProviderConnection[]
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

model ProviderConnection {
  id          String   @id @default(uuid())
  providerId  String
  provider    Provider @relation(fields: [providerId], references: [id])
  credentials Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model File {
  id        String   @id @default(uuid())
  name      String
  isFolder  Boolean  @default(false)
  parentId  String?
  parent    File?    @relation("FolderContents", fields: [parentId], references: [id], onDelete: Cascade)
  children  File[]   @relation("FolderContents")
  size      Int?
  mimeType  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
